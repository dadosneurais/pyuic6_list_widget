# Form implementation generated from reading ui file 'list_widget_app_1.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtGui import QIcon, QFont
from PyQt6.QtWidgets import QInputDialog, QLineEdit, QMessageBox

class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.setWindowIcon(QIcon('../img/python.png'))
        Dialog.setFixedWidth(700)
        Dialog.setFixedHeight(500)
        Dialog.setStyleSheet('background-color:darkslategrey; color: lightcyan')
        Dialog.setWindowOpacity(0.8)

        self.horizontalLayout = QtWidgets.QHBoxLayout(Dialog)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.listWidget = QtWidgets.QListWidget(parent=Dialog)
        self.listWidget.setObjectName("listWidget")
        self.listWidget.setFont(QFont('comic sans ms', 15))
        self.listWidget.setStyleSheet('''
            background-color: black;
            background-image: url('../img/kali.png');
            background-repeat: no-repeat;
            background-position: bottom right; 
            background-attachment: fixed; /* mant√©m a imagem fixa
        ''')
        self.horizontalLayout.addWidget(self.listWidget)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.bt_add = QtWidgets.QPushButton(parent=Dialog)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.bt_add.setFont(font)
        self.bt_add.setObjectName("bt_add")

        # connect add
        self.bt_add.clicked.connect(self.add_item)

        self.verticalLayout.addWidget(self.bt_add)
        self.bt_edit = QtWidgets.QPushButton(parent=Dialog)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.bt_edit.setFont(font)
        self.bt_edit.setObjectName("bt_edit")

        # connect edit
        self.bt_edit.clicked.connect(self.edit_item)

        self.verticalLayout.addWidget(self.bt_edit)
        self.bt_remove = QtWidgets.QPushButton(parent=Dialog)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.bt_remove.setFont(font)
        self.bt_remove.setObjectName("bt_remove")

        # connect remove
        self.bt_remove.clicked.connect(self.remove_item)

        self.verticalLayout.addWidget(self.bt_remove)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Expanding)
        self.verticalLayout.addItem(spacerItem)
        self.bt_sort = QtWidgets.QPushButton(parent=Dialog)
        font = QtGui.QFont()
        font.setFamily("Comic Sans MS")
        font.setPointSize(14)
        self.bt_sort.setFont(font)
        self.bt_sort.setObjectName("bt_sort")

        # connect sort
        self.bt_sort.clicked.connect(self.sort_item)

        self.verticalLayout.addWidget(self.bt_sort)
        self.horizontalLayout.addLayout(self.verticalLayout)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def add_item(self):
        row = self.listWidget.currentRow()
        title = 'Add Item'
        data, ok = QInputDialog.getText(Dialog, title, 'Insert value')

        if ok and data.strip():
            self.listWidget.insertItem(row, data.strip())
        else:
            QMessageBox.warning(Dialog, "Invalid Input", "Item cannot be empty!")

    def edit_item(self):
        row = self.listWidget.currentRow()
        item = self.listWidget.item(row)

        if item is not None:
            title = 'Edit item'
            data, ok = QInputDialog.getText(Dialog, title, 'Edit value', QLineEdit.EchoMode.Normal, item.text())

            if ok and data.strip():
                item.setText(data)
            else:
                QMessageBox.warning(Dialog, "Invalid Input", "Item cannot be empty!")

    def remove_item(self):
        row = self.listWidget.currentRow()
        item = self.listWidget.item(row)      

        if item is None:
            return 
        reply = QMessageBox.question(Dialog, 'Remove Item', f'Do You Want to Remove {item.text()} Item?',
                                     QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No)
        if reply == QMessageBox.StandardButton.Yes:
            self.listWidget.takeItem(row)

    
    def sort_item(self):
        self.listWidget.sortItems()


    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.bt_add.setText(_translate("Dialog", "Add"))
        self.bt_edit.setText(_translate("Dialog", "Edit"))
        self.bt_remove.setText(_translate("Dialog", "Remove"))
        self.bt_sort.setText(_translate("Dialog", "Sort"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec())
